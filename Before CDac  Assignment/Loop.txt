1.Write a program that accepts numbers continuously as long as the number is positive and prints the
sum of the given numbers.

#include <stdio.h>
int main() {
    int number;
    int sum = 0;
    printf("Enter numbers continuously (enter a negative number to stop):\n");

    // Loop to accept numbers continuously
    while (1) {
        printf("Enter a number: ");
        scanf("%d", &number);
        if (number > 0) {
            sum += number;
        } else {
            break;
        }
    }
    printf("Sum of the given numbers: %d\n", sum);
    return 0;
}

2.Write a program to accept two integers x and n and compute x raised to n.

#include <stdio.h>
int main() {
    int x, n;
    long long result = 1; // Initialize result to 1 to handle cases where n is 0
    printf("Enter the value of x: ");
    scanf("%d", &x);
    printf("Enter the value of n: ");
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        result *= x;
    }
    printf("%d raised to the power of %d is: %lld\n", x, n, result);
    return 0;
}

3.Write a program to accept a character, an integer n and display the next n characters.

#include <stdio.h>
int main() {
    char character;
    int n;
    printf("Enter a character: ");
    scanf(" %c", &character);
    printf("Enter an integer n: ");
    scanf("%d", &n);
    printf("Next %d characters:\n", n);
    for (int i = 0; i < n; i++) {
        printf("%c ", character + i + 1);
    }
    printf("\n");
    return 0;
}

4.Write a program to calculate factorial of a number.
For e.g. factorial of 5 = 5! = 5 *4*3*2*1 = 120

#include <stdio.h>
int factorial(int n) {
    if (n == 0) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

int main() {
    int number;
    printf("Enter a number: ");
    scanf("%d", &number);
    if (number < 0) {
        printf("Error! Factorial is not defined for negative numbers.\n");
    } else {
        printf("Factorial of %d = %d\n", number, factorial(number));
    }
    return 0;
}

5.Write a program to calculate factors of a given number.

#include <stdio.h>
int main() {
    int number;
    printf("Enter a number: ");
    scanf("%d", &number);
    printf("Factors of %d are: ", number);
    for (int i = 1; i <= number; i++) {
        if (number % i == 0) {
            printf("%d ", i);
        }
    }
    printf("\n");
    return 0;
}

6.Accept two numbers and calculate GCD of them.

#include <stdio.h>
int gcd(int a, int b) {
    int temp;
    while (b != 0) {
        temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

int main() {
    int num1, num2;
    printf("Enter two numbers: ");
    scanf("%d %d", &num1, &num2);
    printf("GCD of %d and %d is: %d\n", num1, num2, gcd(num1, num2));
    return 0;
}

7.Write a menu driven program to do following operations :
a) Compute area of circle
b) Compute area of rectangle
c) Compute area of triangle
d) Exit
Display menu, ask choice to the user, depending on choice accept the parameters and perform the
operation. Continue this process until user selects exit option.

#include <stdio.h>
#include <math.h>
#define PI 3.14159

// Compute the area of a circle
float computeCircleArea(float radius) {
    return PI * radius * radius;
}

// Compute the area of a rectangle
float computeRectangleArea(float length, float width) {
    return length * width;
}

// Compute the area of a triangle
float computeTriangleArea(float base, float height) {
    return 0.5 * base * height;
}

int main() {
    char choice;
    float radius, length, width, base, height;
    
    do {
        printf("\nMenu:\n");
        printf("a) Compute area of circle\n");
        printf("b) Compute area of rectangle\n");
        printf("c) Compute area of triangle\n");
        printf("d) Exit\n");
        printf("Enter your choice: ");
        scanf(" %c", &choice);
        
        switch (choice) {
            case 'a':
                printf("Enter the radius of the circle: ");
                scanf("%f", &radius);
                printf("Area of the circle: %.2f\n", computeCircleArea(radius));
                break;
            case 'b':
                printf("Enter the length of the rectangle: ");
                scanf("%f", &length);
                printf("Enter the width of the rectangle: ");
                scanf("%f", &width);
                printf("Area of the rectangle: %.2f\n", computeRectangleArea(length, width));
                break;
            case 'c':
                printf("Enter the base of the triangle: ");
                scanf("%f", &base);
                printf("Enter the height of the triangle: ");
                scanf("%f", &height);
                printf("Area of the triangle: %.2f\n", computeTriangleArea(base, height));
                break;
            case 'd':
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice! Please enter a valid option.\n");
        }
    } while (choice != 'd');
    return 0;
}

8.Write a program to print all prime numbers between 1 to n.

#include <stdio.h>
int isPrime(int num) {
    if (num <= 1) {
        return 0; // Not prime
    }
    for (int i = 2; i * i <= num; i++) {
        if (num % i == 0) {
            return 0; // Not prime
        }
    }
    return 1; // Prime
}

int main() {
    int n;
    printf("Enter the value of n: ");
    scanf("%d", &n);
    printf("Prime numbers between 1 to %d are: ", n);
    for (int i = 2; i <= n; i++) {
        if (isPrime(i)) {
            printf("%d ", i);
        }
    }
    printf("\n");
    return 0;
}

