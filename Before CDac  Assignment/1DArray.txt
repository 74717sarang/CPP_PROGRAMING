1.Write a program to accept n numbers in an array and display the largest and smallest number. Using
these values, calculate the range of elements in the array.

#include <stdio.h>
int main() {
    int n;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d numbers:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    int largest = arr[0];
    int smallest = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] > largest) {
            largest = arr[i];
        }
        if (arr[i] < smallest) {
            smallest = arr[i];
        }
    }
    int range = largest - smallest;
    printf("Largest number: %d\n", largest);
    printf("Smallest number: %d\n", smallest);
    printf("Range of elements: %d\n", range);
    return 0;
}

2.Write a program to accept an array of n elements and a number say key. Check whether key is present
in the array or not.

#include <stdio.h>
int main() {
    int n, key;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d numbers:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    printf("Enter the key to search: ");
    scanf("%d", &key);
    int found = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] == key) {
            found = 1;
            break;
        }
    }
    if (found) {
        printf("Key %d is present in the array.\n", key);
    } else {
        printf("Key %d is not present in the array.\n", key);
    }
    return 0;
}

3.Write a program to accept an integer array and an integer say num and counts the occurrences of the
num in the array.

#include <stdio.h>
int main() {
    int n, num;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d numbers:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    printf("Enter the number to count occurrences for: ");
    scanf("%d", &num);
    int count = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] == num) {
            count++;
        }
    }
    printf("Number of occurrences of %d in the array: %d\n", num, count);
    return 0;
}

4.Write a program to accept n numbers from the user and store them in an array. Then sort the array in
descending order and display it.

#include <stdio.h>
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}
void bubbleSortDescending(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] < arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
            }
        }
    }
}

int main() {
    int n;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d numbers:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    bubbleSortDescending(arr, n);
    printf("Sorted array in descending order: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
    return 0;
}

5.Write a program to accept a decimal number and convert it to binary.

#include <stdio.h>
void decimalToBinary(int d) {
    int binary[32];
    int index = 0;
    while (d > 0) {
        binary[index++] = d % 2;
        d /= 2;
    }
    printf("Binary representation: ");
    for (int i = index - 1; i >= 0; i--) {
        printf("%d", binary[i]);
    }
    printf("\n");
}

int main() {
    int d;
    printf("Enter a decimal number: ");
    scanf("%d", &d);
    decimalToBinary(d);
    return 0;
}

